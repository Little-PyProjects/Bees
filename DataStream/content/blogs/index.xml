<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on The Data Stream</title>
    <link>https://hugo-profile.netlify.app/blogs/</link>
    <description>Recent content in Blogs on The Data Stream</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Nov 2023 08:12:00 -0500</lastBuildDate>
    <atom:link href="https://hugo-profile.netlify.app/blogs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>When was the last unpredicted tsunami?</title>
      <link>https://hugo-profile.netlify.app/blogs/the-last-unpredicted-tsunami/</link>
      <pubDate>Mon, 20 Nov 2023 08:12:00 -0500</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/the-last-unpredicted-tsunami/</guid>
      <description>In preparation for building a model for earthquake initiated tsunami prediction, my thinking is what is needed data on earthquakes, tsunami, and ideally which earthquakes generated tsunami warnings as a check. No surprises here.&#xA;But that got me wondering when was the last tsunami which there was no warning for? Both earthquakes and tsunami have have been recorded to some degree or another for hundreds of years. And plate tectonics has been around as a theory since the early 20th century.</description>
    </item>
    <item>
      <title>Datetime. Why is always datetimes?</title>
      <link>https://hugo-profile.netlify.app/blogs/datetimes/</link>
      <pubDate>Sun, 19 Nov 2023 13:19:24 -0500</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/datetimes/</guid>
      <description>Let&amp;rsquo;s start off with that it&amp;rsquo;s totally possible I overlooked something here.&#xA;I&amp;rsquo;m working on NOAA&amp;rsquo;s tsunami data. I want to combine &amp;lsquo;Year&amp;rsquo;, &amp;lsquo;Mo&amp;rsquo;, &amp;lsquo;Dy&amp;rsquo;, &amp;lsquo;Hr&amp;rsquo;, &amp;lsquo;Mn&amp;rsquo;, &amp;lsquo;Sec&amp;rsquo; columns together as a datetime. There are a few NaNs but not dealbreaker. I&amp;rsquo;ll just fill in a missing hour, min or sec with a zero.&#xA;Ok, we&amp;rsquo;re good to go&#xA;And by &amp;lsquo;good to go&amp;rsquo; I mean &amp;lsquo;good to spend a stupid amount of time wondering why this doesn&amp;rsquo;t work&amp;rsquo;.</description>
    </item>
    <item>
      <title>One of these things is not like the other</title>
      <link>https://hugo-profile.netlify.app/blogs/one-of-these-things-is-not-like-the-other/</link>
      <pubDate>Sun, 05 Nov 2023 23:19:56 -0500</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/one-of-these-things-is-not-like-the-other/</guid>
      <description>Just to make it clear, this is mostly as a matter of record and as a reminder to myself. I like this hugo theme but there is some excess stuff. I&amp;rsquo;m not a front-end developer, so it typically takes me a while to figure out what I suppose is a pretty easy thing.&#xA;Anyway, notice this blue link below? What&amp;rsquo;s up with that and how do I get rid of it?</description>
    </item>
    <item>
      <title>Using exiftool to rename a folder of files based on creation date</title>
      <link>https://hugo-profile.netlify.app/blogs/renaming-apple-recordings-in-bulk/</link>
      <pubDate>Thu, 02 Nov 2023 17:33:47 -0500</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/renaming-apple-recordings-in-bulk/</guid>
      <description>I have a lot of recordings on my iPhone. If you have Location Services turned on, they&amp;rsquo;ll get saved something like &amp;ldquo;Home 14&amp;rdquo; or similar. Mine is set to &amp;lsquo;Never&amp;rsquo; and yet this is, for some reason, still an issue.&#xA;While knowing the location is nice, it really isn&amp;rsquo;t useful because most are made in the same location. What I really need are to the dates, which I can get from the EXIF data.</description>
    </item>
    <item>
      <title>Heard Back From NGA</title>
      <link>https://hugo-profile.netlify.app/blogs/heard-back-from-nga/</link>
      <pubDate>Thu, 15 Jun 2023 14:47:47 -0500</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/heard-back-from-nga/</guid>
      <description>Received email from NGA. The answer seemed a mix of low priority, noncommittal, and &amp;ldquo;this is the way it&amp;rsquo;s always been done&amp;rdquo; justifications. I asked for clarification.&#xA;If this goes nowhere, I&amp;rsquo;ll make changes and provide them but focus on getting it on Kaggle first. An option I&amp;rsquo;m seriously considering is a two or three part solution. The first would be to keep the dataset as it is. The second (and I think more useful) is to one-shot the hostilities but leave the victims as the vessel type can be tricky.</description>
    </item>
    <item>
      <title>A Glitchy Detail With Pandas Chaining</title>
      <link>https://hugo-profile.netlify.app/blogs/a-glitchy-detail-with-pandas-chaining/</link>
      <pubDate>Thu, 23 Feb 2023 14:43:04 -0500</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/a-glitchy-detail-with-pandas-chaining/</guid>
      <description>If you&amp;rsquo;re using chaining in pandas to pipeline a .csv, order can play a factor. Specifically, with filling in NaNs and reordering column names. It has to be done in that order.&#xA;So, this works:&#xA;diamonds = (pd.read_csv(&amp;#34;../data/diamonds_raw.csv&amp;#34;, index_col=[0]) .drop([&amp;#39;date&amp;#39;, &amp;#39;diamond_id&amp;#39;], axis=1) .rename(columns={&amp;#39;cut&amp;#39;: &amp;#39;cut_quality&amp;#39;, &amp;#39;shape&amp;#39; : &amp;#39;cut&amp;#39;, &amp;#39;size&amp;#39;: &amp;#39;caret_weight&amp;#39;}) .fillna({&amp;#39;color&amp;#39;:&amp;#39;unknown&amp;#39;, &amp;#39;cut_quality&amp;#39;:&amp;#39;unknown&amp;#39;, &amp;#39;eye_clean&amp;#39;: &amp;#39;unknown&amp;#39;, &amp;#39;fancy_color_dominant_color&amp;#39;: &amp;#39;unknown&amp;#39;, &amp;#39;fancy_color_secondary_color&amp;#39;: &amp;#39;unknown&amp;#39;, &amp;#39;fancy_color_overtone&amp;#39;:&amp;#39;unknown&amp;#39;, &amp;#39;fancy_color_intensity&amp;#39;:&amp;#39;unknown&amp;#39;, &amp;#39;girdle_min&amp;#39;:&amp;#39;unknown&amp;#39;, &amp;#39;girdle_max&amp;#39;:&amp;#39;unknown&amp;#39;, &amp;#39;culet_size&amp;#39;:&amp;#39;unknown&amp;#39;, &amp;#39;culet_condition&amp;#39;:&amp;#39;unknown&amp;#39;, &amp;#39;fluor_color&amp;#39;:&amp;#39;unknown&amp;#39;, &amp;#39;fluor_intensity&amp;#39;:&amp;#39;unknown&amp;#39;}) .loc[:, [&amp;#34;cut&amp;#34;, &amp;#34;color&amp;#34;, &amp;#34;clarity&amp;#34;, &amp;#34;caret_weight&amp;#34;, &amp;#34;lab&amp;#34;, &amp;#34;symmetry&amp;#34;, &amp;#34;polish&amp;#34;, &amp;#39;eye_clean&amp;#39;, &amp;#39;culet_size&amp;#39;, &amp;#39;depth_percent&amp;#39;, &amp;#39;table_percent&amp;#39;, &amp;#39;meas_length&amp;#39;, &amp;#39;meas_width&amp;#39;,&amp;#39;meas_depth&amp;#39;, &amp;#39;girdle_min&amp;#39;, &amp;#39;girdle_max&amp;#39;, &amp;#39;culet_size&amp;#39;, &amp;#39;culet_condition&amp;#39;, &amp;#39;fluor_color&amp;#39;, &amp;#39;fluor_intensity&amp;#39;, &amp;#39;fancy_color_dominant_color&amp;#39;, &amp;#39;fancy_color_secondary_color&amp;#39;, &amp;#39;fancy_color_overtone&amp;#39;, &amp;#39;fluor_color&amp;#39;, &amp;#39;fluor_intensity&amp;#39;, &amp;#39;total_sales_price&amp;#39;]] .</description>
    </item>
    <item>
      <title>Scikit Learn or Pandas for Encoding</title>
      <link>https://hugo-profile.netlify.app/blogs/scikit-learn-or-pandas-for-encoding/</link>
      <pubDate>Thu, 23 Feb 2023 06:57:41 -0500</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/scikit-learn-or-pandas-for-encoding/</guid>
      <description>An aquaintance asked, &amp;ldquo;Which is faster, pandas get_dummies or scikit&amp;rsquo;s label_encoder?&amp;rdquo; and I had to pause for two reasons. First, they do two different things. A better comparison would be between one-hot, get_dummies and ordinal_encoder.&#xA;Second, I really didn&amp;rsquo;t have a sense on differences in times, so I whipped up a short sample project to test this.&#xA;%timeit pd.get_dummies(df,df.columns[df.dtypes == &amp;#39;object&amp;#39;]) 212 ms ± 2.51 ms per loop (mean ± std.</description>
    </item>
    <item>
      <title>Shredding It Old School</title>
      <link>https://hugo-profile.netlify.app/blogs/shredding-it-old-school/</link>
      <pubDate>Tue, 09 Aug 2022 13:46:31 -0500</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/shredding-it-old-school/</guid>
      <description>I was watching the Clone Wars with The Kid. At the beginning of most of the episodes there is an aphorism and most I think are pretty good. And, not that I think the folks in Ukraine would need this or read it, but it did make me think they might be motivational and would make a good &amp;ldquo;little pyproject&amp;rdquo;.&#xA;So I did a quick search, found a list, and downloaded it.</description>
    </item>
    <item>
      <title>The Dustbin of Tech</title>
      <link>https://hugo-profile.netlify.app/blogs/the-dustbin-of-tech/</link>
      <pubDate>Thu, 26 May 2022 13:29:56 -0500</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/the-dustbin-of-tech/</guid>
      <description>We&amp;rsquo;ve all seen this before. A piece of technology that seems interesting yet never really seems to catch on. For a few of these examples, like Sony&amp;rsquo;s Betamax, they were demonstrably better in some form or another. Yet they still lost.&#xA;There is another sort of example. Cases where something that&amp;rsquo;s absolutely ancient still preforms a job remarkably well &amp;ndash; if you know how to use them.&#xA;Maybe that&amp;rsquo;s a hand-plane; maybe it&amp;rsquo;s sed.</description>
    </item>
    <item>
      <title>Rename a Conda Environment</title>
      <link>https://hugo-profile.netlify.app/blogs/rename-a-conda-environment/</link>
      <pubDate>Tue, 05 Apr 2022 12:24:24 -0500</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/rename-a-conda-environment/</guid>
      <description>I inadvertently mistyped the name of a new miniforge environment and didn&amp;rsquo;t catch it until I went to activate it.&#xA;Not a huge deal as it&amp;rsquo;s a quick fix.&#xA;conda create -n new_name --clone old_name conda remove -n old_name --all One other detail &amp;ndash; you can&amp;rsquo;t be in the environment, of course.</description>
    </item>
    <item>
      <title></title>
      <link>https://hugo-profile.netlify.app/blogs/copilot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/copilot/</guid>
      <description>Microsoft Cloud in the era of AI with Arun Ulagaratchagan, Charles Lamanna and Scott Guthrie&#xA;Pretty eearly in 46% of code writtern by copilot&#xA;Copilot studio</description>
    </item>
    <item>
      <title></title>
      <link>https://hugo-profile.netlify.app/blogs/dotfiles-lessons-learned/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/dotfiles-lessons-learned/</guid>
      <description>Troubleshooting setting up a git rep containing the original files which are then symlinked to.&#xA;Why I did this: I tried moving all the dot files to a separate folder that I will (eventually) want to set up as a git repo, and then push to the web for both teaching and backup purposes.&#xA;But it didn&amp;rsquo;t work. Bummer!&#xA;So, after getting things back to where they were &amp;ndash; twice, I&amp;rsquo;m testing it with dummy file which I&amp;rsquo;ll modify which I&amp;rsquo;ll then append with the results.</description>
    </item>
    <item>
      <title></title>
      <link>https://hugo-profile.netlify.app/blogs/sunspots/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hugo-profile.netlify.app/blogs/sunspots/</guid>
      <description>I should have been a physiscist. Of course, that would mean that I would have to had better math in school and, let&amp;rsquo;s face it, the US has a history of uneven education and therewas no Khan Academy when I was a kid. Actually, I was a physics major early on.But shitty math teachers, as well as being homeless my second year of college, pretty much tanked that. The irony is I stil lovephysics and now have most of the math needed.</description>
    </item>
  </channel>
</rss>
